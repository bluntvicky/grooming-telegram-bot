const schedule = require('node-schedule');
const Appointment = require('../models/appointment');
const { formatDateTime } = require('../utils/dateHelpers');

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Telegraf
 */
const setupAppointmentReminders = (bot) => {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  schedule.scheduleJob('*/5 * * * *', async () => {
    try {
      const now = new Date();
      
      // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
      // –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—É–ø–∏—Ç —á–µ—Ä–µ–∑ 1.5 —á–∞—Å–∞ –∏–ª–∏ –º–µ–Ω—å—à–µ
      const oneAndHalfHoursFromNow = new Date(now.getTime() + 90 * 60 * 1000); // 90 –º–∏–Ω—É—Ç
      const appointments = await Appointment.find({
        status: 'confirmed',
        reminderSent: false,
      }).populate({
        path: 'timeSlot',
        match: {
          startTime: { $gt: now, $lte: oneAndHalfHoursFromNow }
        }
      }).populate('services');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
      for (const appointment of appointments) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω
        if (!appointment.timeSlot) continue;
        
        try {
          // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
          let servicesList = '';
          if (appointment.services && appointment.services.length > 0) {
            servicesList = appointment.services.map(service => `‚Ä¢ ${service.name}`).join('\n');
          }
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
          await bot.telegram.sendMessage(
            appointment.user.telegramId,
            `‚è∞ *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏*\n\n` +
            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${appointment.user.name}!\n\n` +
            `–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤ ${new Date(appointment.timeSlot.startTime).toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })} ` +
            `—É –≤–∞—Å –∑–∞–ø–∏—Å—å –Ω–∞ –≥—Ä—É–º–∏–Ω–≥ –≤ –Ω–∞—à —Å–∞–ª–æ–Ω "–ü—É—à–∏—Å—Ç—ã–π –¥—Ä—É–≥".\n\n` +
            `–£—Å–ª—É–≥–∏:\n${servicesList}\n\n` +
            `üè† –ê–¥—Ä–µ—Å: —É–ª. –ü—É—à–∏—Å—Ç–∞—è, –¥. 15\n` +
            `üê∂ –ü–∏—Ç–æ–º–µ—Ü: ${appointment.petInfo.breed}\n\n` +
            `–ï—Å–ª–∏ —É –≤–∞—Å –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ø–ª–∞–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –∑–∞—Ä–∞–Ω–µ–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (999) 123-45-67.\n\n` +
            `–ñ–¥—ë–º –≤–∞—Å –∏ –≤–∞—à–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞! üêæ`,
            { parse_mode: 'Markdown' }
          );
          
          // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
          appointment.reminderSent = true;
          await appointment.save();
          
          console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ ID: ${appointment._id}`);
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ ID: ${appointment._id}:`, error);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', error);
    }
  });
  
  console.log('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞–ø—É—â–µ–Ω');
};

module.exports = { setupAppointmentReminders }; 