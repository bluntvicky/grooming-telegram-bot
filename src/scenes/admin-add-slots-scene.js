const { Scenes } = require('telegraf');
const TimeSlot = require('../models/timeSlot');
const { adminPanelMenu, confirmKeyboard } = require('../utils/keyboards');
const { requireAdmin } = require('../middleware/admin');
const { formatDate, addMinutes, getStartOfDay, getEndOfDay } = require('../utils/dateHelpers');

// –°—Ü–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
const adminAddSlotsScene = new Scenes.BaseScene('admin-add-slots-scene');

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
adminAddSlotsScene.use(requireAdmin);

// –®–∞–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤
// 1. –í—ã–±–æ—Ä –¥–∞—Ç—ã
// 2. –í—ã–±–æ—Ä –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
// 3. –í—ã–±–æ—Ä –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
// 4. –í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
// 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—Ç–æ–≤

// –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É
adminAddSlotsScene.enter(async (ctx) => {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
  ctx.session.formData = {
    slotDate: null,
    startTime: null,
    endTime: null,
    slotDuration: 60 // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 60 –º–∏–Ω—É—Ç
  };
  
  await ctx.reply(
    '‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤*\n\n' +
    '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2024):',
    { parse_mode: 'Markdown' }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
adminAddSlotsScene.command('cancel', (ctx) => {
  ctx.reply('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ', adminPanelMenu());
  return ctx.scene.leave();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
adminAddSlotsScene.on('text', async (ctx) => {
  // –ï—Å–ª–∏ —É–∂–µ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
  if (ctx.session.formData.slotDate && ctx.session.formData.startTime && !ctx.session.formData.endTime) {
    return handleEndTimeInput(ctx);
  }
  
  // –ï—Å–ª–∏ —É–∂–µ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
  if (ctx.session.formData.slotDate && !ctx.session.formData.startTime) {
    return handleStartTimeInput(ctx);
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
  const dateText = ctx.message.text.trim();
  const dateRegex = /^(\d{1,2})\.(\d{1,2})\.(\d{4})$/;
  const match = dateText.match(dateRegex);
  
  if (!match) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2024):');
  }
  
  const day = parseInt(match[1]);
  const month = parseInt(match[2]) - 1; // –í JavaScript –º–µ—Å—è—Ü—ã –æ—Ç 0 –¥–æ 11
  const year = parseInt(match[3]);
  
  const date = new Date(year, month, day);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ª–∏ –¥–∞—Ç–∞
  if (isNaN(date.getTime())) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ—à–µ–¥—à–∞—è –ª–∏ –¥–∞—Ç–∞
  if (date < new Date()) {
    return ctx.reply('–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ—Ç—ã –Ω–∞ –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ –±—É–¥—É—â–µ–º:');
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É
  ctx.session.formData.slotDate = date;
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
  await ctx.reply(
    `üìÖ –í—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞: ${formatDate(date)}\n\n` +
    '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:00):'
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
async function handleStartTimeInput(ctx) {
  const timeText = ctx.message.text.trim();
  const timeRegex = /^(\d{1,2}):(\d{2})$/;
  const match = timeText.match(timeRegex);
  
  if (!match) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:00):');
  }
  
  const hours = parseInt(match[1]);
  const minutes = parseInt(match[2]);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏
  if (hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:');
  }
  
  // –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞—á–∞–ª–∞
  const startDate = new Date(ctx.session.formData.slotDate);
  startDate.setHours(hours, minutes, 0, 0);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
  ctx.session.formData.startTime = startDate;
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
  await ctx.reply(
    `‚è∞ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: ${startDate.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}\n\n` +
    '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 18:00):'
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
async function handleEndTimeInput(ctx) {
  const timeText = ctx.message.text.trim();
  const timeRegex = /^(\d{1,2}):(\d{2})$/;
  const match = timeText.match(timeRegex);
  
  if (!match) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 18:00):');
  }
  
  const hours = parseInt(match[1]);
  const minutes = parseInt(match[2]);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏
  if (hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {
    return ctx.reply('–ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:');
  }
  
  // –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è
  const endDate = new Date(ctx.session.formData.slotDate);
  endDate.setHours(hours, minutes, 0, 0);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–∑–∂–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
  if (endDate <= ctx.session.formData.startTime) {
    return ctx.reply('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–∑–∂–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è:');
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
  ctx.session.formData.endTime = endDate;
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
  await ctx.reply(
    `‚è∞ –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${endDate.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}\n\n` +
    '–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ (–≤ –º–∏–Ω—É—Ç–∞—Ö):',
    {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '30 –º–∏–Ω', callback_data: 'slot_duration_30' },
            { text: '45 –º–∏–Ω', callback_data: 'slot_duration_45' },
            { text: '60 –º–∏–Ω', callback_data: 'slot_duration_60' }
          ],
          [
            { text: '90 –º–∏–Ω', callback_data: 'slot_duration_90' },
            { text: '120 –º–∏–Ω', callback_data: 'slot_duration_120' }
          ]
        ]
      }
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–ª–æ—Ç–∞
adminAddSlotsScene.action(/^slot_duration_(\d+)$/, async (ctx) => {
  const duration = parseInt(ctx.match[1]);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ—Ç–∞
  ctx.session.formData.slotDuration = duration;
  
  await ctx.answerCbQuery();
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ—Ç–∞—Ö –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const { slotDate, startTime, endTime, slotDuration } = ctx.session.formData;
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤
  const totalMinutes = (endTime - startTime) / (1000 * 60);
  const slotCount = Math.floor(totalMinutes / slotDuration);
  
  await ctx.reply(
    `üìã *–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–æ—Ç–∞—Ö*\n\n` +
    `üìÖ –î–∞—Ç–∞: ${formatDate(slotDate)}\n` +
    `‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: —Å ${startTime.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })} ` +
    `–¥–æ ${endTime.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}\n` +
    `‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ—Ç–∞: ${slotDuration} –º–∏–Ω.\n` +
    `üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤: ${slotCount}\n\n` +
    `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:`,
    {
      parse_mode: 'Markdown',
      ...confirmKeyboard('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'confirm_slots', 'cancel_slots')
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—Ç–æ–≤
adminAddSlotsScene.action('confirm_slots', async (ctx) => {
  const { slotDate, startTime, endTime, slotDuration } = ctx.session.formData;
  
  try {
    await ctx.answerCbQuery();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ —Å–ª–æ—Ç—ã –Ω–∞ —ç—Ç—É –¥–∞—Ç—É
    const dateStart = getStartOfDay(slotDate);
    const dateEnd = getEndOfDay(slotDate);
    
    const existingSlots = await TimeSlot.exists({
      startTime: { $gte: dateStart, $lte: dateEnd }
    });
    
    if (existingSlots) {
      await ctx.reply(
        '‚ö†Ô∏è –ù–∞ —ç—Ç—É –¥–∞—Ç—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã. –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã?',
        confirmKeyboard('‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å', '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'add_more_slots', 'cancel_slots')
      );
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç—ã
    return createTimeSlots(ctx);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–ª–æ—Ç–æ–≤:', err);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ª–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    return ctx.scene.leave();
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
adminAddSlotsScene.action('add_more_slots', async (ctx) => {
  await ctx.answerCbQuery();
  return createTimeSlots(ctx);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ—Ç–æ–≤
adminAddSlotsScene.action('cancel_slots', async (ctx) => {
  await ctx.answerCbQuery();
  await ctx.reply('‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ', adminPanelMenu());
  return ctx.scene.leave();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
async function createTimeSlots(ctx) {
  const { slotDate, startTime, endTime, slotDuration } = ctx.session.formData;
  
  try {
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤
    const slots = [];
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ—Ç–∞
    let currentSlotStart = new Date(startTime);
    
    while (currentSlotStart.getTime() + slotDuration * 60 * 1000 <= endTime.getTime()) {
      // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–æ—Ç–∞
      const currentSlotEnd = addMinutes(currentSlotStart, slotDuration);
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç
      slots.push({
        date: new Date(slotDate),
        startTime: new Date(currentSlotStart),
        endTime: new Date(currentSlotEnd),
        isBooked: false,
        createdBy: ctx.from.id
      });
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ—Ç—É
      currentSlotStart = new Date(currentSlotEnd);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–æ—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await TimeSlot.insertMany(slots);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await ctx.reply(
      `‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${slots.length} –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ ${formatDate(slotDate)}!`,
      adminPanelMenu()
    );
    
    return ctx.scene.leave();
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:', err);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ª–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    return ctx.scene.leave();
  }
}

module.exports = { adminAddSlotsScene }; 