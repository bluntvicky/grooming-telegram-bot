const { Markup } = require('telegraf');

// –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const mainMenu = () => {
  return Markup.keyboard([
    ['üê∂ –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã', 'üìÖ –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è'],
    ['üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è', '‚≠ê –û—Ç–∑—ã–≤—ã'],
    ['‚ùì –û –Ω–∞—Å', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã']
  ]).resize();
};

// –ú–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
const adminMenu = () => {
  return Markup.keyboard([
    ['üê∂ –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã', 'üìÖ –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è'],
    ['üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è', '‚≠ê –û—Ç–∑—ã–≤—ã'],
    ['üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å']
  ]).resize();
};

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
const adminPanelMenu = () => {
  return Markup.keyboard([
    ['‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ—Ç—ã', 'üìã –ó–∞–ø–∏—Å–∏'],
    ['‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∑—ã–≤—ã', '‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É'],
    ['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é']
  ]).resize();
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ª–æ—Ç–æ–≤ –ø–æ –¥–Ω—è–º
const dateSelectKeyboard = (dates) => {
  const buttons = dates.map(date => 
    Markup.button.callback(
      date.formattedDate, 
      `date_${date.value}`
    )
  );
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  buttons.push(Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_main'));
  
  return Markup.inlineKeyboard(buttons, { columns: 1 });
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
const timeSlotKeyboard = (slots) => {
  const buttons = slots.map(slot => 
    Markup.button.callback(
      `${new Date(slot.startTime).toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}`, 
      `slot_${slot._id}`
    )
  );
  
  buttons.push(Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –¥–∞—Ç–∞–º', 'back_to_dates'));
  
  return Markup.inlineKeyboard(buttons, { columns: 2 });
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
const servicesKeyboard = (services) => {
  const buttons = services.map(service => 
    Markup.button.callback(
      `${service.name} - ${service.price}‚ÇΩ`, 
      `service_${service._id}`
    )
  );
  
  buttons.push(Markup.button.callback('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä', 'finish_service_selection'));
  buttons.push(Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_main'));
  
  return Markup.inlineKeyboard(buttons, { columns: 1 });
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
const confirmKeyboard = (confirmText = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', cancelText = '–û—Ç–º–µ–Ω–∏—Ç—å', confirmAction = 'confirm', cancelAction = 'cancel') => {
  return Markup.inlineKeyboard([
    Markup.button.callback(confirmText, confirmAction),
    Markup.button.callback(cancelText, cancelAction)
  ]);
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
const paginationKeyboard = (list, page, itemsPerPage, callbackPrefix) => {
  const totalPages = Math.ceil(list.length / itemsPerPage);
  const buttons = [];
  
  // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  if (page > 1) {
    buttons.push(Markup.button.callback('‚¨ÖÔ∏è', `${callbackPrefix}_prev_${page}`));
  }
  
  buttons.push(Markup.button.callback(`${page}/${totalPages}`, 'page_info'));
  
  if (page < totalPages) {
    buttons.push(Markup.button.callback('‚û°Ô∏è', `${callbackPrefix}_next_${page}`));
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
  buttons.push(Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_main'));
  
  return Markup.inlineKeyboard([buttons]);
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
const ratingKeyboard = () => {
  const buttons = [];
  for (let i = 1; i <= 5; i++) {
    buttons.push(Markup.button.callback(`${i} ‚≠ê`, `rating_${i}`));
  }
  return Markup.inlineKeyboard([buttons]);
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç–∑—ã–≤–∞–º–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∞)
const reviewActionKeyboard = (reviewId) => {
  return Markup.inlineKeyboard([
    Markup.button.callback('‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', `approve_review_${reviewId}`),
    Markup.button.callback('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', `reject_review_${reviewId}`)
  ]);
};

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—å—é (–¥–ª—è –∞–¥–º–∏–Ω–∞)
const appointmentActionKeyboard = (appointmentId) => {
  return Markup.inlineKeyboard([
    Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', `confirm_appointment_${appointmentId}`),
    Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', `cancel_appointment_${appointmentId}`)
  ]);
};

module.exports = {
  mainMenu,
  adminMenu,
  adminPanelMenu,
  dateSelectKeyboard,
  timeSlotKeyboard,
  servicesKeyboard,
  confirmKeyboard,
  paginationKeyboard,
  ratingKeyboard,
  reviewActionKeyboard,
  appointmentActionKeyboard
}; 